"""
Специфика кортежей
"""

# 1. Кортежи не изменяемы == Не деформируемы  + Не поддерживают изменение значений при обращении по индексу
nums = (10, 20, 30)
#nums[0] = 100000000

# 2. Кортежи сравниваются поэлементно
a = (1, 2, 10000)
b = (1, 3)
print(a < b)

# Из-за того, что кортежи можно сравнивать - списки тоже можно сравнивать
# В момент сравнения списки будут приведены к кортежам (неявно)
a_lst = [1, 2, 1000000000000000]
b_lst = [1, 3]
print(a_lst < b_lst)

# 3. Множественное присваивание
# Можно даже явно не ставить скобки - Python "дорисует" их сам.
# Важно - количество переменных слева должно равняться количеству значений справа
a , _ , c  = 10, 20, 30
print("a:", a,  "c:", c)

# Множественное присваивание точно так же работает на спиках
nums = [10, 20] # Список неявно приводится к кортежу, а потом см. п. 3
a, b = nums 
print("a from list:", a, "b from list:", b)


# 4. Пример. Почему множественное присваивание - хорошо
a, b = 10, 20 

# swap(a,b)
# temp = a 
# a = b 
# b = temp  
a, b = b , a  # (20, 10)
print(b, a)

# 5. Облегченность кортежей
lst = [10**10] * 10000 # Размер списка при увеличении кол-ва элементов ПОСЛЕ ПОРОГА(платформозависимое значение)
                       # начинает возрастать квадратично
tpl = (10 ** 10, ) * 10000 # Размер (байтовый) кортежа меняется всегда линейно

print("List size:", lst.__sizeof__(), "Bytes")
print("Tuple size:", tpl.__sizeof__(), "Bytes")










