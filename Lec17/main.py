"""
Для того, чтобы проект с какими-либо сторонними зависимостями было удобно передавать, необходимо
создать виртуальное окружение.

Виртуальное окружение - заизолированная проектная область в ОС.
Pipenv - утилита, отвечающая за создание/модофицирование/транспортироваку зависимостей внутри
виртуального окружения, созданного для работы с .py проектами.

* Установка : pip install pipenv
* Создаем виртуальное окружение в каком-нибудь месте системы: pipenv shell
* Появляется Pipefile
* Проверим, что в окружении нет никаких зависимостей (pip freeze)
* Для выхода из окружения  - exit
* Для повторного открытия - pipenv shell (в той же директории, где находится Pipfile)

* Для того, чтобы установиться <package> (пакет, фреймворк, библиотеку): 
pipenv install <package> .Example: pipenv install fkask

* После чего создается Pipfile.lock - содержит в себе контрольные суммы и слепки всех версий
всех зависимостей в данном окружении
* Pipfile - обычный скрипт, который можно редактировать при необходимости.


* Как передавать окружение?
* Достатчно передать Pipfile и Pipfile.lock
* После этого по месту развертки проекта : pipenv install  (создание окружения на основе Pipfile.lock файла)
* pipenv shell - а потом - pipenv install (в новое окружение будут установлены зависимости из старого)

* Бонус : Docker, CI/CD , AWS/GC - поддерживают приоритетно использование Pipfile'ов.
"""


# pipenv = virtualenv + manpy + pipfiler 

